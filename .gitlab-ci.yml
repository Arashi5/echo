# Job(s) to build target app
build:
  stage: basic
  allow_failure: false
  script:
    - make build
  rules:
    - if: $CI_COMMIT_BRANCH == 'master' || $CI_COMMIT_BRANCH == 'develop' && $CI_PROJECT_NAMESPACE !~ /^product\/grade-factor\/.+$/
      when: always
    - if:  $CI_COMMIT_BRANCH != 'master' && $CI_COMMIT_BRANCH != 'develop'
      when: always


#Code style
fmt:
  stage: basic
  allow_failure: true
  script:
    - if [[ -n $(gofmt -l ./|grep -v vendor) ]]; then echo "Необходимо отформтаировать код при помощи gofmt" && exit 1; fi
  rules:
    - if: $CI_COMMIT_BRANCH == 'master' || $CI_COMMIT_BRANCH == 'develop' && $CI_PROJECT_NAMESPACE !~ /^product\/grade-factor\/.+$/
      when: always
    - if:  $CI_COMMIT_BRANCH != 'master' && $CI_COMMIT_BRANCH != 'develop'
      when: always


#Tests
test:
  stage: basic
  allow_failure: true
  script:
    - GO111MODULE=off go get github.com/boumenot/gocover-cobertura
    - GOSUMDB=off go test -coverprofile=coverage.txt -count=1 -v -race -timeout=30s -tags=unit ./...
    - gocover-cobertura < coverage.txt > coverage.xml
  artifacts:
    paths:
      - ./coverage.xml
  rules:
    - if: $CI_COMMIT_BRANCH == 'master' || $CI_COMMIT_BRANCH == 'develop' && $CI_PROJECT_NAMESPACE !~ /^product\/grade-factor\/.+$/
      when: always
    - if:  $CI_COMMIT_BRANCH != 'master' && $CI_COMMIT_BRANCH != 'develop'
      when: always

#Linter and code quality report creation
lint:
  image: golangci/golangci-lint:v1.41.1-alpine
  stage: basic
  allow_failure: true
  script:
    - golangci-lint run --timeout 10m --issues-exit-code 0 --out-format code-climate | tee gl-code-quality-report.json
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths:
      - gl-code-quality-report.json
  rules:
    - if: $CI_COMMIT_BRANCH == 'master' || $CI_COMMIT_BRANCH == 'develop' && $CI_PROJECT_NAMESPACE !~ /^product\/grade-factor\/.+$/
      when: always
    - if:  $CI_COMMIT_BRANCH != 'master' && $CI_COMMIT_BRANCH != 'develop'
      when: always